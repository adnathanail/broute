name: Lint, build, & test

on:
  push:
    branches:
    - main
  pull_request:

concurrency:
  # Cancel if I push to the same branch
  cancel-in-progress: true
  # Don't cancel on main
  group: ${{ github.ref == 'refs/heads/main' && format('ci-main-{0}', github.sha) || format('ci-{0}', github.ref) }}

env:
  CARGO_TERM_COLOR: always

jobs:
  lint-build-and-test:

    runs-on: ubuntu-latest

    steps:
    - name: Wipe benchmark comment
      if: ${{ (success() || failure()) && github.event.pull_request }}
      uses: thollander/actions-comment-pull-request@v2
      with:
        GITHUB_TOKEN: ${{ secrets.COMMENT_ON_PR_TOKEN }}
        message: |
          _(execution **${{ github.run_id }}** / attempt **${{ github.run_attempt }}**)_
          Awaiting PR run
        comment_tag: benchmark_output
    - uses: actions/checkout@v3
    - name: Install rust
      run: rustup toolchain install stable --profile minimal
    - name: Cache cargo dependencies
      uses: Swatinem/rust-cache@v2
    - name: Lint
      run: cargo clippy --all-targets --all-features -- -D warnings
    - name: Build
      if: ${{ success() || failure() }}
      run: cargo build
    - name: Test
      if: ${{ success() || failure() }}
      run: |
        CARGO_INCREMENTAL=0 RUSTFLAGS='-Cinstrument-coverage' LLVM_PROFILE_FILE='target/coverage/data/cargo-test-%p-%m.profraw' cargo test
        grcov ./target/coverage/data --binary-path ./target/debug/deps/ -s . -t lcov --branch --ignore-not-existing --ignore '../*' --ignore "/*" --ignore "**/target/**" -o target/coverage/tests.lcov
    - name: Upload coverage reports to Codecov
      if: ${{ success() || failure() }}
      uses: codecov/codecov-action@v3
      with:
        token: ${{ secrets.CODECOV_TOKEN }} # not required for public repos
        files: ./target/coverage/tests.lcov
        fail_ci_if_error: true
    - name: Benchmark (PR)
      if: ${{ (success() || failure()) && github.event.pull_request }}
      # https://github.com/bheisler/criterion.rs/issues/193#issuecomment-415740713
      run: |
        git fetch origin main --depth 1
        git checkout main
        cargo bench --bench benchmarks -- --save-baseline base
        git checkout refs/remotes/pull/${{ github.event.pull_request.number }}/merge
        cargo bench --bench benchmarks -- --baseline base | tee benchmark_output.txt
        echo "_(execution **${{ github.run_id }}** / attempt **${{ github.run_attempt }}**)_" > temp
        echo \`\`\` >> temp
        cat benchmark_output.txt >> temp
        mv temp benchmark_output.txt
        echo \`\`\` >> benchmark_output.txt
        cat benchmark_output.txt
    - name: Replace benchmark comment
      if: ${{ (success() || failure()) && github.event.pull_request }}
      uses: thollander/actions-comment-pull-request@v2
      with:
        GITHUB_TOKEN: ${{ secrets.COMMENT_ON_PR_TOKEN }}
        filePath: benchmark_output.txt
        comment_tag: benchmark_output
